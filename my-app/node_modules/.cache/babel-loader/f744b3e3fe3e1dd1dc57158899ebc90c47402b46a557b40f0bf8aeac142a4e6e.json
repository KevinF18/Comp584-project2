{"ast":null,"code":"var _jsxFileName = \"/Users/kevinflores/Desktop/project2/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ... (previous imports)\n\nexport default function App() {\n  _s();\n  const [fileData, setFileData] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  // Function to fetch data from the server\n  const fetchData = async () => {\n    try {\n      if (selectedFiles.length > 0) {\n        const responses = [];\n        for (const file of selectedFiles) {\n          const formData = new FormData();\n          formData.append(\"my_audio_file\", file);\n          const response = await axios.post(\"http://localhost:8086/api/file_tempo\", formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          });\n          responses.push(response.data);\n        }\n        setFileData(prevData => [...prevData, ...responses]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  // Function to submit files and update table data\n  const submitFiles = async () => {\n    // Call fetchData to update fileData state\n    await fetchData();\n  };\n  const handleFileChange = event => {\n    setSelectedFiles([...event.target.files]);\n  };\n  const exportToExcel = () => {\n    const ws = XLSX.utils.json_to_sheet(fileData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"FileTempoData\");\n    XLSX.writeFile(wb, \"file_tempo_data.xlsx\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File Tempo Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      multiple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitFiles,\n      type: \"button\",\n      className: \"btn btn-primary\",\n      children: \"Submit Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToExcel,\n      type: \"button\",\n      className: \"btn btn-primary\",\n      children: \"Export to Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), fileData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k3sUB21cMYp2WVJRIMZW7eMJyUk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","fileData","setFileData","useState","selectedFiles","setSelectedFiles","fetchData","length","responses","file","formData","FormData","append","response","axios","post","headers","push","data","prevData","error","console","submitFiles","handleFileChange","event","target","files","exportToExcel","ws","XLSX","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","multiple","onClick","_c","$RefreshReg$"],"sources":["/Users/kevinflores/Desktop/project2/my-app/src/App.js"],"sourcesContent":["// ... (previous imports)\n\nexport default function App() {\n  const [fileData, setFileData] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  // Function to fetch data from the server\n  const fetchData = async () => {\n    try {\n      if (selectedFiles.length > 0) {\n        const responses = [];\n\n        for (const file of selectedFiles) {\n          const formData = new FormData();\n          formData.append(\"my_audio_file\", file);\n\n          const response = await axios.post(\n            \"http://localhost:8086/api/file_tempo\",\n            formData,\n            {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\",\n              },\n            }\n          );\n\n          responses.push(response.data);\n        }\n\n        setFileData((prevData) => [...prevData, ...responses]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  // Function to submit files and update table data\n  const submitFiles = async () => {\n    // Call fetchData to update fileData state\n    await fetchData();\n  };\n\n  const handleFileChange = (event) => {\n    setSelectedFiles([...event.target.files]);\n  };\n\n  const exportToExcel = () => {\n    const ws = XLSX.utils.json_to_sheet(fileData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"FileTempoData\");\n    XLSX.writeFile(wb, \"file_tempo_data.xlsx\");\n  };\n\n  return (\n    <div className=\"App p-4\">\n      <h1>File Tempo Data</h1>\n      <input type=\"file\" onChange={handleFileChange} multiple />\n      <button onClick={submitFiles} type=\"button\" className=\"btn btn-primary\">\n        Submit Files\n      </button>\n      <button onClick={exportToExcel} type=\"button\" className=\"btn btn-primary\">\n        Export to Excel\n      </button>\n      {fileData.length > 0 && (\n        <table className=\"table table-striped\">\n          {/* ... (table structure) */}\n        </table>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}